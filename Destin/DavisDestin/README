Destin Cuda
Andrew Davis, 2012


COMPILATION INSTRUCTIONS:
    Compiles with Makefile, no external dependencies (except CUDA libraries, of course) required.

    TAKE CARE TO:
    Change CUDAROOT and NVCC to reflect where they are installed on your system;
    Change NVCCFLAGS to reflect your graphics card's CUDA version.

    The Makefile will put two executables in bin/*


DESTIN:
    Lives in bin/destin

    This program runs Destin.  It takes 6 arguments:
        configfile:
            A configuration file.  Defined by a plaintext file in the following format:
            Number of movements per digit (newline)
            Number of pixels to feed to input node (newline)
            Number of layers in network (newline)
            Number of beliefs in each layer (newline after each entry)

        trainset-in:
            The file containing data to train Destin.

        nntrain-in:
            The file containing the data to obtain beliefs from Destin to feed into
            some supervised learning system for classification

        nntrain-out:
            The file containing the output beliefs from Destin for neural network
            training

        nntest-in:
            Same as nntrain-in, but for neural net testing

        nntest-out:
            Same as nntrain-out, but for neural net testing

    Each file containing data for Destin input is a binary file consisting of floats.  Nothing
    fancy: if you have a 16x16 input to the network, each 16x16x4 byte chunk is a separate
    image.

    Similarly, each file containing beliefs obtained from the network is a binary file consisting
    of floats.  If you have 474 beliefs per presentation, each 474x4 byte chunk is a separate
    belief.

Generating datasets for Destin:
    
    Use mnist/generate_mnist_sets.sh script to download and generate data. It will get the MNIST binary
    dataset (4 files) from http://yann.lecun.com/exdb/mnist/. There are two Matlab/Octave files:
    generate_mnist_set_16.m and generate_mnist_set_32.m
    
    The generated data from generate_mnist_set_32.m needs about 9GB of hard disk space and takes about 5 minutes to run.
    The generated data from generate_mnist_set_16.m needs about 1GB of hard disk space and takes about 1 minute to run.

    The first generates a sequence of digit presentations.  Each presentation consists of a z-scan
    over the 28x28 MNIST raster.  generate_mnist_set_16 sweeps a 16x16 window over the 28x28 raster,
    resulting in a presentation length of 19.  generate_mnist_set_32 sweeps a 32x32 window over the
    28x28 raster (padding non-existant pixels) resulting in a presentation length of 24.


To Do:
    Adequately profile CUDA code, speed things up

Any questions?  Send them to adavis72@utk.edu
